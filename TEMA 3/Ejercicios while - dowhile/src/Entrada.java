import java.util.Scanner;

public class Entrada {
    static Scanner teclado = new Scanner(System.in);
    public static void main(String[] args) {
        //ejercicioUno();
        //ejercicioDos();
        //ejercicioTres();
        //ejercicioCuatro();
        //ejercicioCinco();
        //ejercicioSeis();
        //ejercicioSiete();
        ejercicioOcho();
        //ejercicioNueve();

    }

    // Ejercicio 1: Leer n√∫meros enteros hasta introducir un 0. El programa obtendr√° la suma de todos
    //los n√∫meros positivos. (SumarPositivos)
    public static void ejercicioUno(){
        int numero = 0;
        int suma = 0;

        System.out.print("Introduce un n√∫mero entero (0 para salir): ");
        numero = teclado.nextInt();
        while (numero != 0) {
            if (numero > 0) {
                suma += numero;
            }
            System.out.print("Introduce un n√∫mero entero (0 para salir): ");
            numero = teclado.nextInt();
        }
        System.out.println("La suma de los n√∫meros positivos es: " + suma);
    /* CON DO WHILE
        * int numero;
        int suma = 0;

        do {
            System.out.print("Introduce un n√∫mero entero (0 para salir): ");
            numero = sc.nextInt();

            if (numero > 0) {
                suma += numero;
            }
        } while (numero != 0);

        System.out.println("La suma de los n√∫meros positivos es: " + suma);
    }
        * */


    }


    //Ejercicio 2: Calc√∫lese el m√≠nimo com√∫n m√∫ltiplo de dos n√∫meros entre 1 y 100. Para obtener el mcm se tomar√° uno
    // de los valores introducidos y se ir√° multiplicando por 1, 2, 3, etc, hasta que el valor obtenido sea m√∫ltiplo
    // del otro n√∫mero, que ser√≠a el valor buscado. (MinimoComunMultiplo)
    public static void ejercicioDos(){
        int num1, num2, mcm = 0;
        boolean encontrado = false;

        System.out.print("Introduce el primer n√∫mero (entre 1 y 100): ");
        num1 = teclado.nextInt();
        System.out.print("Introduce el segundo n√∫mero (entre 1 y 100): ");
        num2 = teclado.nextInt();

        if (num1 < 1 || num1 > 100 || num2 < 1 || num2 > 100) {
            System.out.println("Los n√∫meros deben estar entre 1 y 100.");
            return;
        }

        mcm = num1;

        while (!encontrado) {
            if (mcm % num2 == 0) {
                encontrado = true;
            } else {
                mcm += num1;
            }
        }

        System.out.println("El m√≠nimo com√∫n m√∫ltiplo de " + num1 + " y " + num2 + " es: " + mcm);
    }

    // Ejercicio 3: Generar n√∫meros enteros aleatorios entre 0 y 100 hasta obtener el 0. El programa mostrar√° cada
    // uno de los datos generados y obtendr√° el mayor de los n√∫meros generados. (MayorNumero)
    public static void ejercicioTres(){
        int numero;
        int mayor = 0;
        int contador=0;

        do {
            numero = (int) (Math.random() * 101);
            // Contador para los numeros generados
            contador ++ ;

            System.out.println("N√∫mero generado: " + numero);
            if (numero > mayor) {
                mayor = numero;
            }
        } while (numero != 0);

        System.out.println("El mayor n√∫mero generado es: " + mayor);
        System.out.println("Numeros generados: "+contador);
    }

    // Ejercicio 4: Introducir un entero no negativo, y convertirlo a binario, octal y hexadecimal. (BinarioOctalHexadecimal)
    public static void ejercicioCuatro(){
        System.out.print("Introduce un numero: ");
        int numero = teclado.nextInt();
        do {
            System.out.print("Introduce un n√∫mero entero NO negativo: ");
            numero = teclado.nextInt();
            if (numero < 0) {
                System.out.println("‚ùå El n√∫mero no puede ser negativo. Int√©ntalo de nuevo.");
            }
        } while (numero < 0);

        // Conversi√≥n
        String binario = Integer.toBinaryString(numero);
        String octal = Integer.toOctalString(numero);
        String hexadecimal = Integer.toHexString(numero).toUpperCase();

        // Resultado
        System.out.println("\nRepresentaciones:");
        System.out.println("üîπ Binario: " + binario);
        System.out.println("üîπ Octal: " + octal);
        System.out.println("üîπ Hexadecimal: " + hexadecimal);
    }

    /* Ejercicio 5: Crea un programa que genere un n√∫mero aleatorio (entre 0 y 20) de entrada y lo guarde en una
    // variable. El sistema ir√° pidiendo n√∫meros al usuario hasta que coincida con el aleatorio generado
    // (en caso de no coincidir mostrar√° el mensaje "Lo siento, intentalo de nuevo"). Cuando coincida el sistema
    // deber√° mostar el mensaje "Enhorabuena, has acertado el n√∫mero en 5 intentos" (Adivina)*/
    public static void ejercicioCinco(){
        int numeroAleatorio = (int) (Math.random() * 21);
        int intentos = 0;
        int numeroUsuario;

        System.out.println("Adivina el n√∫mero entre 0 y 20");
        do{
            System.out.println("Introduce un n√∫mero: ");
            numeroUsuario = teclado.nextInt();
            intentos++;

            if (numeroUsuario != numeroAleatorio) {
                System.out.println("Lo siento, intentalo de nuevo");
            }
        }while (numeroUsuario != numeroAleatorio);
        System.out.println("Enhorabuena, has acertado el n√∫mero en " + intentos + " intentos");
    }

    /*Ejercicio 6: Modifica el ejercicio anterior para que una vez adivinado el n√∫mero el sistema muestre el
    siguiente mensaje: "Quieres volver a jugar (S/N)":
    - En caso de introducir N la aplicaci√≥n se detendr√°
    - En caso de introducir S la aplicaci√≥n empezar√° de nuevo (generando un aleatorio, pidiendo n√∫meros hasta
       acertar el generado, etc...) Cuando el usuario acierte el n√∫mero generado se mostrar√° un mensaje diciendo
        si ha superado el record de intentos (si ha hecho menos intentos que las veces anteriores) (AdivinaRecord)
    */
    public static void ejercicioSeis(){
        String jugarOtraVez;
        int record = Integer.MAX_VALUE;

        do {
            int numeroAleatorio = (int) (Math.random() * 21);
            int intentos = 0;
            int numeroUsuario;

            System.out.println("\nAdivina el n√∫mero entre 0 y 20");

            do {
                System.out.print("Introduce un n√∫mero: ");
                numeroUsuario = teclado.nextInt();
                intentos++;

                if (numeroUsuario != numeroAleatorio) {
                    System.out.println("Lo siento, int√©ntalo de nuevo");
                }
            } while (numeroUsuario != numeroAleatorio);

            System.out.println("Enhorabuena, has acertado el n√∫mero en " + intentos + " intentos");

            if (intentos < record) {
                record = intentos;
                System.out.println("üéâ ¬°Nuevo r√©cord de intentos!");
            } else {
                System.out.println("El r√©cord actual es de " + record + " intentos.");
            }

            teclado.nextLine(); // limpiar buffer del nextInt
            System.out.print("¬øQuieres volver a jugar? (S/N): ");
            jugarOtraVez = teclado.nextLine().toUpperCase();

        } while (jugarOtraVez.equals("S"));

        System.out.println("¬°Gracias por jugar! üòÑ");

    }

    /* Ejercicio 7: Realizar un men√∫ de 4 opciones, donde se mostrar√° por pantalla el siguiente formato
    - Bienvenido a la aplicaci√≥n del men√∫ - 1. Opci√≥n1 - 2. Opci√≥n2 - 3. Opci√≥n3 - 4. Opci√≥n4 - 5. Salir - Introduce la opci√≥n seleccionada
Una vez mostrado la √∫ltima l√≠nea, el sistema esperar√° a que el usuario introduzca un dato. Dependiendo de la opci√≥n
 seleccionada aparecer√° un mensaje por pantalla que ponga "La opci√≥n seleccionada es X".
 En el caso de meter una diferente pondr√° "opci√≥n no contemplada". El programa se repetir√≠a hasta que introduzca el 5 (MenuSimple)
    * */
    public static void ejercicioSiete(){
        int opcion;

        do {
            // Mostrar el men√∫
            System.out.println("\n- Bienvenido a la aplicaci√≥n del men√∫ -");
            System.out.println("1. Opci√≥n1");
            System.out.println("2. Opci√≥n2");
            System.out.println("3. Opci√≥n3");
            System.out.println("4. Opci√≥n4");
            System.out.println("5. Salir");
            System.out.print("Introduce la opci√≥n seleccionada: ");

            opcion = teclado.nextInt();

            // Evaluar la opci√≥n
            switch (opcion) {
                case 1:
                    System.out.println("La opci√≥n seleccionada es 1");
                    break;
                case 2:
                    System.out.println("La opci√≥n seleccionada es 2");
                    break;
                case 3:
                    System.out.println("La opci√≥n seleccionada es 3");
                    break;
                case 4:
                    System.out.println("La opci√≥n seleccionada es 4");
                    break;
                case 5:
                    System.out.println("Saliendo del programa...");
                    break;
                default:
                    System.out.println("Opci√≥n no contemplada");
            }

        } while (opcion != 5); // Repetir hasta que el usuario pulse 5

        teclado.close();

    }

    /*Ejercicio 8: Modifica el ejercicio anterior para hacer una calculadora. Nada m√°s ejecutar se mostrar√°n
    las opciones disponibles - Bienvenido a la aplicaci√≥n de calculos - Introduce operando uno: - Introduce operando
    dos: - 1. Sumar - 2. Restar - 3. Multiplicar - 4. Dividir - 5. M√≥dulo - 6. Salir - Selecciona la operacion que quieres realizar.
Al seleccionar una de las opciones el sistema realizar√° la operaci√≥n correspondiente y mostrar√° el resultado por
pantalla de la siguiente forma "El resultado de la operaci√≥n es:". Una vez terminada la operaci√≥n volver√° a mostrar el
 men√∫ y pedir dos n√∫meros nuevos. (MenuCalculo)
    * */
    public static void ejercicioOcho(){}

    //Ejercicio 9:3. Modifica el ejercicio 9 para hacer una calculadora de cambios de base. Nada m√°s ejecutar se
    // mostrar√°n las opciones disponibles - Bienvenido a la aplicaci√≥n de cambios de base
    //    - Introduce el n√∫mero que quieres cambiar de base:
    //    - Pasar a ba
    //    se2
    //    - Pasar a base8
    //    - Pasar a base16
    //    - Salir
    //    - Selecciona la base a la que quieres pasar
    //
    //Al introducir un n√∫mero el sistema comprobar√° que es mayor que 0. En caso de no serlo mostrar√° el mensaje
    // "No v√°lido, introduce otro", esperando una nueva introducci√≥n de datos. Una vez introducido, al seleccionar
    // una de las opciones el sistema realizar√° la conversi√≥n correspondiente y mostrar√° el resultado por pantalla de
    // la siguiente forma "El n√∫mero XX en base10 es igual que XX en baseXX". Una vez terminada la operaci√≥n volver√° a
    // mostrar el men√∫ y pedir un n√∫mero. (MenuBases)
    public static void ejercicioNueve(){}

}
